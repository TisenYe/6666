#include<bits/stdc++.h>         //Luogu P3811
#include<math.h>
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,st,ed) for(int i = st; i < ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9+7;
const ll N = 1e6 + 200;
const ll INF = 9999999999999;
const double eps = 1e-5;

/*
    扩展欧几里得，求解：ax + by = m = gcd(a, b)
    m mod gcd(a, b) = 0,因为这个是上式有解的必要条件
*/
int gcd(int a, int b) {
    return !b ? a : gcd(b, a % b);
}

void Exgcd(ll a, ll b, ll &x, ll &y) {      //x,y为 a*x + b*y == c的一组解
    if (!b) x = 1, y = 0;
    else Exgcd(b, a % b, y, x), y -= a / b * x;
}
int main(){
    ll n,p;
    cin>>n>>p;
    ll x,y;
    for(int i = 1; i <= n; i++){
        Exgcd(i, p, x, y);          //求逆元
        x = (x%p+p)%p;
        cout<<x<<endl;
    }
    return 0;
}
