#include<bits/stdc++.h>     //a的b个a次方对m取模
#define ll long long
using namespace std;
const int N =1e6+10;
ll Mod(ll x,ll mod)
{
	return x<mod?x:x%mod+mod;
}
int phi[N], prime[N];
int tot;//tot计数，表示prime[N]中有多少质数 从0开始计数
void Euler(){       //去掉和phi数组有关的即为线性筛
    phi[1]=1;
    for(int i=2;i<N;i++){
        if(!phi[i]){
            phi[i]=i-1;
            prime[tot++]=i;
        }
        for(int j=0;j<tot&&1ll*i*prime[j]<N;j++){
            if(i%prime[j])phi[i*prime[j]]=phi[i]*(prime[j]-1);
            else{
                phi[i*prime[j]]=phi[i]*prime[j];
                break;
            }
        }
    }
}
ll power(ll a,ll b,ll c)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
		ans=Mod(ans*a,c);
		a=Mod(a*a,c);
		b>>=1;
	}
	return ans;
}
ll dfs(ll a,ll b,ll m)
{
	if(b==0)
	return 1;
	if(m==1)
	return a;
	ll res=dfs(a,b-1,phi[m]);
	return power(a,res,m);
}
int main(){
    Euler();
    int t;
    cin>>t;
    while(t--)
    {
    	int a,b,m;
    	cin>>a>>b>>m;
    	cout<<dfs(a,b,m)%m<<endl;
    }
	}
