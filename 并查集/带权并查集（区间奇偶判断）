#include<iostream>
#include<vector>
#include<cstdio>
#include<cmath>
#include<map>
using namespace std;
#define ll long long        
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,start,end) for(ll i = start; i < end; ++i)
#define dwn(i,n) for(int i = n; i >= 0; --i)
#define dwn2(i,start,end) for(ll i = start; i >= end; --i)
#define pll pair<ll,ll>
#define mk(x,y) make_pair(x,y)
#define pdl pair<double, ll>
const ll N = 4e5 + 200;
const ll INF = 0x3f3f3f;
const ll mode = 1e9 + 7;
//询问m次区间内的奇偶，判断第一次说谎为第几次发言，离散化
map<ll,ll> mp;
ll f[N], r[N];

void init(ll n){
	rep(i,n+1){
		f[i] = i;
		r[i] = 0;
	}
}

ll Find(ll x){
	if(x == f[x]) return x;
	ll tmp = f[x];
	f[x] = Find(f[x]);
	r[x] = (r[x] + r[tmp])%2;
	return f[x] = Find(f[x]);
}


bool same(ll x, ll y){
	return Find(x) == Find(y);
}
int main(){
	ll n,m;
	ll cnt = 1;
	cin>>n>>m;
		init(5020);
		ll ans = 0;
		int flag = 0;
		rep(i,m){
			ll x,y;
			string s;
			cin>>x>>y>>s;
			x--;
			if(!mp[x]){
				mp[x] = cnt++;
			}
			if(!mp[y]){
				mp[y] = cnt++;
			}
			x = mp[x];
			y = mp[y];
			ll v = 0;
			if(s == "odd") v = 1;
			if(same(x,y)){
				if((r[x] - r[y] +2) % 2 != v && !flag){
					ans = i;
					flag = 1;
				}
			}else{
				ll x2 = Find(x), y2 = Find(y);
				f[x2] = y2;
				r[x2] = (r[y] - r[x] + v +2)%2; //向量减法
			}
		}
		if(flag)
		cout<<ans<<endl;		
		else
		cout<<m<<endl;
	return 0;
}


