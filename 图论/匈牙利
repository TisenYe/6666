#include<bits/stdc++.h>         //O(m*n)
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,st,ed) for(int i = st; i < ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;

typedef struct nod{
    int v,Next,w;
}nods;
nods edge[N];
int head[N],tot,n;
int vis[N],match[N];

void add(int u, int v, int w){
    edge[++tot].v = v;
    edge[tot].Next = head[u];
    edge[tot].w = w;
    head[u] = tot;
}

int dfs(int u){
    for(int i = head[u]; i; i = edge[i].Next){
        int v = edge[i].v;
        if(!vis[v]){
            vis[v] = 1;
            if(!match[v] || dfs(match[v])){
                match[v] = u;
                match[u] = v;
                return 1;
            }
        }
    }
    return 0;
}

int hungary(int x){
    memset(vis, 0, sizeof(vis));
    return dfs(x);
}

int ans[N],ins[N];

int main(){
    int m;
    cin>>n>>m;
    int x,y;
    rep(i,m){
       scanf("%d%d",&x,&y);
       add(x,y+n,1);
    }
    int rst = n;
    rep2(i,1,n+1){          //求最大匹配
        if(!match[i]){
            rst -= hungary(i);
        }
    }
    rep2(i,n+1,2*n+1){
        if(match[i]){
            ans[match[i]] = i - n;
            ins[i-n]++;
        }
    }
    rep2(i,1,n+1){
        if(!ins[i]){
            printf("%d",i);
            int tmp = i;
            while((tmp = ans[tmp])){
                printf(" %d", tmp);
            }
            printf("\n");
        }
    }
    cout<<rst<<endl;
}
