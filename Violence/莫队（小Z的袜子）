#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,st,ed) for(int i = st; i < ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 1e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;

int a[N], belong[N];
int cnt[N];
struct nod{
    ll l,r;
    int id;
}q[N], ans[N];

ll now;
bool cmp(nod a, nod b){
    return (belong[a.l] ^ belong[b.l]) ? belong[a.l] < belong[b.l] : ((belong[a.l] & 1) ? a.r < b.r : a.r > b.r);
}
bool cmp2(nod a ,nod b){
    return belong[a.l] == belong[b.l] ? a.r < b.r : belong[a.l] < belong[b.l];
}
void remove(ll x){
    now -= cnt[a[x]]*cnt[a[x]];
    cnt[a[x]]--;
    now += cnt[a[x]]*cnt[a[x]];;
}
void add(ll x){
    now -= cnt[a[x]]*cnt[a[x]];
    cnt[a[x]]++;
    now += cnt[a[x]]*cnt[a[x]];
    // cout<<now<<endl;
}
ll gcd(ll a, ll b){
    return !b ? a : gcd(b, a%b);
}
int main(){
    ios::sync_with_stdio(false);
    int n,m;
    cin>>n>>m;
    int siz = sqrt(n);
    rep(i,n){
        cin>>a[i+1];
        belong[i] = i/siz + 1;
    }
    rep(i,m){
        cin>>q[i].l>>q[i].r;
        q[i].id = i;
    }
    sort(q,q+m,cmp2);
    int l = q[0].l;
    int r = l-1;
    rep(i,m){
        int ql = q[i].l, qr = q[i].r;
        // cout<<ql<<" "<<qr<<endl;
        while(l>ql) add(--l);
        while(r<qr) add(++r);
        while(l<ql) remove(l++);
        while(r>qr) remove(r--);
        if(ql == qr){
            ans[q[i].id].l = 0, ans[q[i].id].r = 1;
            continue;
        }
        ans[q[i].id].l = now - (qr-ql+1LL);
        ans[q[i].id].r = (qr-ql+1LL) * (qr-ql);
        ll tmp = gcd(ans[q[i].id].l, ans[q[i].id].r);
        // cout<<tmp<<endl;
        ans[q[i].id].l /= tmp;
        ans[q[i].id].r /= tmp;
    }
    rep(i,m){
        cout<<ans[i].l<<"/"<<ans[i].r<<endl;
    }

    return 0;
}