#include<bits/stdc++.h>		//O(n*sqrt(n))
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,st,ed) for(int i = st; i < ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 1e6 + 200;
const ll INF = 1e18;
const double eps = 1e-7;

ll belong[N], a[N], cnt[N];
ll siz, num;
ll ans[N] = {0};
struct query{
	int l,r,id;
}q[N];

bool cmp(query a, query b){
	return (belong[a.l] ^ belong[b.l]) ? belong[a.l] < belong[b.l] : ((belong[a.l] & 1) ? a.r < b.r : a.r > b.r);
}

ll read() {
	ll res = 0;
	char c = getchar();
	while(!isdigit(c)) c = getchar();
	while(isdigit(c)) res = (res << 1) + (res << 3) + c - 48, c = getchar();
	return res;
}
void printi(int x) {
	if(x / 10) printi(x / 10);
	putchar(x % 10 + '0');
}

int main(){
	ios::sync_with_stdio(false);
	ll n;
	n = read();
	rep(i,n){
		a[i+1] = read();
	}
	siz = sqrt(n);
	num = ceil((double)n/siz);
	for(int i = 1; i <= num; i++){
		for(int j = (i-1) * siz + 1; j <= i * siz; ++j){
			belong[j] = i;
		}
	}
	ll m;
	m = read();
	rep(i,m){
		q[i].l = read(), q[i].r = read();
		q[i].id = i;
	}
	sort(q, q+m, cmp);
	
	int now = 0;
	int l = 1, r = 0;
	rep(i,m){
		int ql = q[i].l, qr = q[i].r;
		while(l < ql) now -= !--cnt[a[l++]];
		while(l > ql) now += !cnt[a[--l]]++;
		while(r < qr) now += !cnt[a[++r]]++;
		while(r > qr) now -= !--cnt[a[r--]];
		ans[q[i].id] = now;
	}
	rep(i,m){
		printi(ans[i]), putchar('\n');
	}
	return 0;
}
