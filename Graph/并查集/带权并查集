#include<iostream>
#include<vector>
#include<cstdio>
#include<cmath>
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rep2(i,start,end) for(ll i = start; i < end; ++i)
#define dwn(i,n) for(int i = n; i >= 0; --i)
#define dwn2(i,start,end) for(ll i = start; i >= end; --i)
#define pll pair<ll,ll>
#define mk(x,y) make_pair(x,y)
#define pdl pair<double, ll>
const ll N = 4e5 + 200;
const ll INF = 0x3f3f3f;
const ll mode = 1e9 + 7;

ll f[N], r[N];

void init(ll n){
	rep(i,n+1){
		f[i] = i;
		r[i] = 0;
	}
}

ll Find(ll x){
	if(x == f[x]) return x;
	ll tmp = f[x];
	f[x] = Find(f[x]);
	r[x] = r[x] + r[tmp];
	return f[x] = Find(f[x]);
}

void Union(ll x, ll y, ll val){
	ll x2 = Find(x);
	ll y2 = Find(y);
	if(x2 != y2){
		f[y2] = x2;
		r[y2] = r[x] - r[y] - val; //更新已知从 x到rootx的距离，和x到 rooty的距离，更新rooty的距离为到rootx的距离 
	}
}

bool same(ll x, ll y){
	return Find(x) == Find(y);
}
int main(){
	ll n,m;
	while(cin>>n>>m){
		init(n);
		ll ans = 0;
		while(m--){
			ll x,y,v;
			cin>>x>>y>>v;
			x--;
			if(same(x,y)){
				if(r[x] - r[y] != v){
					ans++;
				}
			}else{
				Union(x,y,v);
			}
		}
		cout<<ans<<endl;		
	}

	return 0;
}






