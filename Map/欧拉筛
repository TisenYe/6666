#include<bits/stdc++.h>
using namespace std;
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define ll long long
#define eps 1e-7
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
const ll N = 1e5 +200;
const ll mod = 1e9 + 7;
const double pi = acos(-1.0);

//primes存储素数
//isnp判断是否为合数，true为不是合数，false为素数
vector<ll> primes;
bool isnp[N];
void init_primes(ll n){
	for(int i = 2; i <= n; i++){
		if(!isnp[i]){
			primes.emplace_back(i);
		}
		for(auto x : primes){
			if(x * i > n) break;
			isnp[x * i] = 1;
			if(i % x == 0) break;
		}
	}
}

int main(){
	// freopen("1.in", "r", stdin);
	// freopen("1.out", "w", stdout);
	ios::sync_with_stdio(false);  
	cin.tie(nullptr);
	ll n;
	cin>>n;
	vector<ll> dp(n+1);
	init_primes(n);
	dp[0] = 1;
	for(auto i : primes){
		for(int j = i; j <= n; j++){
			dp[j] += dp[j - i];	
		}
	}
	cout<<dp[n]<<endl;
	


	return 0;
}
